n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg004  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr39  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg0210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr411  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat2[0x0000000B] @ (A-data-stat2[0x0000000A] @ (A-data-stat2[0x00000009] @ A-data-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat2[0x0000003F] @ (A-data-stat2[0x0000003E] @ (A-data-stat2[0x0000003D] @ (A-data-stat2[0x0000003C] @ (A-data-stat2[0x0000003B] @ (A-data-stat2[0x0000003A] @ (A-data-stat2[0x00000039] @ A-data-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version3[0x00000000]
) AND (0x00 = model_version3[0x00000001]
)
) AND (0x00 = model_version3[0x00000002]
)
) AND (0x00 = model_version3[0x00000003]
)
) );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x61 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x62 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x64 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x66 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x48 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x69 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x6C = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x4C = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x70 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x72 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x73 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x74 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x3A = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x75 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x76 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x78 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x50 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x52 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x53 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
ASSERT( ( NOT( (0x54 = BVSX(arg005[0x00000001],32)
[7:0]
))) );
%----------------------------------------------------
QUERY( FALSE  );
