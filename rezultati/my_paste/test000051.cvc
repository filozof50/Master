n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin-stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout-stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version5  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg006  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin7  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg019  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg0210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr111  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data12  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr313  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr214  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr415  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr516  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr617  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr718  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr819  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr920  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1021  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1122  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1223  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1324  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1425  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1526  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1627  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1728  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1829  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1930  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2031  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2132  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2233  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2334  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2435  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2536  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2637  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2738  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2839  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2940  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3041  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3142  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3243  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3344  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3445  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3546  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3647  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3748  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3849  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3950  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4051  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4152  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4253  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4354  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4455  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4556  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4657  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4758  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat2[0x0000000B] @ (A-data-stat2[0x0000000A] @ (A-data-stat2[0x00000009] @ A-data-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat2[0x0000003F] @ (A-data-stat2[0x0000003E] @ (A-data-stat2[0x0000003D] @ (A-data-stat2[0x0000003C] @ (A-data-stat2[0x0000003B] @ (A-data-stat2[0x0000003A] @ (A-data-stat2[0x00000039] @ A-data-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin-stat3[0x0000000B] @ (stdin-stat3[0x0000000A] @ (stdin-stat3[0x00000009] @ stdin-stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin-stat3[0x0000003F] @ (stdin-stat3[0x0000003E] @ (stdin-stat3[0x0000003D] @ (stdin-stat3[0x0000003C] @ (stdin-stat3[0x0000003B] @ (stdin-stat3[0x0000003A] @ (stdin-stat3[0x00000039] @ stdin-stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout-stat4[0x0000000B] @ (stdout-stat4[0x0000000A] @ (stdout-stat4[0x00000009] @ stdout-stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout-stat4[0x0000003F] @ (stdout-stat4[0x0000003E] @ (stdout-stat4[0x0000003D] @ (stdout-stat4[0x0000003C] @ (stdout-stat4[0x0000003B] @ (stdout-stat4[0x0000003A] @ (stdout-stat4[0x00000039] @ stdout-stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version5[0x00000000]
) AND (0x00 = model_version5[0x00000001]
)
) AND (0x00 = model_version5[0x00000002]
)
) AND (0x00 = model_version5[0x00000003]
)
) );
ASSERT( (0x2D = arg019[0x00000000]
) );
ASSERT( (0x00 = arg019[0x00000001]
) );
ASSERT( (0x2F = arg008[0x00000000]
) );
ASSERT( (0x68 = arg008[0x00000001]
) );
ASSERT( (0x0A = stdin7[0x00000000]
) );
ASSERT( (0x0A = stdin7[0x00000001]
) );
ASSERT( (0x0A = stdin7[0x00000002]
) );
ASSERT( (0x0A = stdin7[0x00000003]
) );
ASSERT( (0x0A = stdin7[0x00000004]
) );
ASSERT( (0x0A = stdin7[0x00000005]
) );
ASSERT( (0x0A = stdin7[0x00000006]
) );
ASSERT( (0x0A = stdin7[0x00000007]
) );
%----------------------------------------------------
QUERY( FALSE  );
